{"ast":null,"code":"import _objectSpread from \"/Users/yeng/Readsbox/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yeng/Readsbox/client/src/components/navbar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, Button, Toolbar, Avatar, Typography } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport Routes from '..//Routes';\nimport ClientIds from '../config';\nimport axios from 'axios';\nimport { updateUser as _updateUser, updateColumns as _updateColumns } from '../actions/simpleAction';\nvar theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    useNextVariants: true\n  },\n  toolbar: {\n    backgroundColor: 'white'\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    login: {\n      right: 10,\n      position: 'absolute'\n    },\n    logout: {\n      right: 5,\n      top: 13,\n      position: 'absolute'\n    },\n    toolbar: {\n      backgroundColor: '#008080'\n    },\n    save: {\n      right: 90,\n      top: 13,\n      position: 'absolute'\n    },\n    signup: {\n      right: 80,\n      position: 'absolute'\n    },\n    avatar: {\n      left: 35,\n      top: 10,\n      position: 'absolute'\n    },\n    userName: {\n      left: 100,\n      top: 16,\n      position: 'absolute',\n      text: theme.palette.secondary\n    }\n  };\n};\n\nvar saveBooks = function saveBooks(user, userState) {\n  var newUserState = _objectSpread({}, user, {\n    userState: userState\n  });\n\n  axios.post('http://localhost:3001/api/save', newUserState);\n};\n\nvar login = function login(user, updateUser, updateColumns) {\n  console.log(user);\n  axios.get('http://localhost:3001/api/retrieveSave', {\n    params: {\n      email: user.profileObj.email\n    }\n  }).then(function (response) {\n    //console.log(response.data)\n    if (response.data) {\n      updateColumns(response.data.userState.columns);\n    }\n\n    updateUser(_objectSpread({}, user.profileObj, {\n      isAuthenticated: true\n    }));\n  }).catch(function (error) {//console.log(error)\n  });\n};\n\nvar logout = function logout(user, updateUser, updateColumns) {\n  updateUser(_objectSpread({}, user.profileObj, {\n    isAuthenticated: false\n  }));\n};\n\nvar Navbar = function Navbar(_ref) {\n  var classes = _ref.classes,\n      userState = _ref.userState,\n      updateUser = _ref.updateUser,\n      updateColumns = _ref.updateColumns;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(MuiThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"static\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, !userState.user.isAuthenticated && React.createElement(GoogleLogin, {\n    onSuccess: function onSuccess(user) {\n      return login(user, updateUser, updateColumns, userState);\n    },\n    onFailure: console.log,\n    clientId: ClientIds.GOOGLE_CLIENT_ID,\n    render: function render(renderProps) {\n      return React.createElement(Button, {\n        onClick: renderProps.onClick,\n        className: classes.login,\n        color: \"inherit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Login with Google\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), userState.user.isAuthenticated && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    src: userState.user.imageUrl,\n    className: classes.avatar,\n    component: Link,\n    to: \"/profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    className: classes.userName,\n    variant: \"h6\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, userState.user.firstName ? userState.user.firstName : userState.user.givenName), React.createElement(Button, {\n    onClick: function onClick() {\n      return saveBooks(userState.user, userState);\n    },\n    variant: \"h6\",\n    color: \"inherit\",\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    onClick: function onClick() {\n      return logout(userState.user, updateUser, updateColumns);\n    },\n    variant: \"h6\",\n    color: \"inherit\",\n    className: classes.logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Logout\")))), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userState: state.simpleReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateUser: function updateUser(user) {\n      return dispatch(_updateUser(user));\n    },\n    updateColumns: function updateColumns(state) {\n      return dispatch(_updateColumns(state));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Navbar));","map":{"version":3,"sources":["/Users/yeng/Readsbox/client/src/components/navbar.js"],"names":["React","connect","withStyles","AppBar","Button","Toolbar","Avatar","Typography","CssBaseline","createMuiTheme","MuiThemeProvider","Link","GoogleLogin","Routes","ClientIds","axios","updateUser","updateColumns","theme","palette","type","typography","useNextVariants","toolbar","backgroundColor","styles","root","flexGrow","login","right","position","logout","top","save","signup","avatar","left","userName","text","secondary","saveBooks","user","userState","newUserState","post","console","log","get","params","email","profileObj","then","response","data","columns","isAuthenticated","catch","error","Navbar","classes","GOOGLE_CLIENT_ID","renderProps","onClick","imageUrl","firstName","givenName","mapStateToProps","state","simpleReducer","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,UAA1C,QAA4D,mBAA5D;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,0BAAjD;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAU,IAAVA,WAAT,EAAqBC,aAAa,IAAbA,cAArB,QAA0C,yBAA1C;AAEA,IAAMC,KAAK,GAAGT,cAAc,CAAC;AAC3BU,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GADkB;AAI3BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,eAAe,EAAE;AADP,GAJe;AAO3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV;AAPkB,CAAD,CAA5B;;AAYA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAP,KAAK;AAAA,SAAK;AACvBQ,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADiB;AAIvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,QAAQ,EAAE;AAFL,KAJgB;AAQvBC,IAAAA,MAAM,EAAE;AACNF,MAAAA,KAAK,EAAE,CADD;AAENG,MAAAA,GAAG,EAAE,EAFC;AAGNF,MAAAA,QAAQ,EAAE;AAHJ,KARe;AAavBP,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAE;AADV,KAbc;AAgBvBS,IAAAA,IAAI,EAAE;AACJJ,MAAAA,KAAK,EAAE,EADH;AAEJG,MAAAA,GAAG,EAAE,EAFD;AAGJF,MAAAA,QAAQ,EAAE;AAHN,KAhBiB;AAqBvBI,IAAAA,MAAM,EAAE;AACNL,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KArBe;AAyBvBK,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,EADA;AAENJ,MAAAA,GAAG,EAAE,EAFC;AAGNF,MAAAA,QAAQ,EAAE;AAHJ,KAzBe;AA8BvBO,IAAAA,QAAQ,EAAE;AACRD,MAAAA,IAAI,EAAE,GADE;AAERJ,MAAAA,GAAG,EAAE,EAFG;AAGRF,MAAAA,QAAQ,EAAE,UAHF;AAIRQ,MAAAA,IAAI,EAAEpB,KAAK,CAACC,OAAN,CAAcoB;AAJZ;AA9Ba,GAAL;AAAA,CAApB;;AAsCA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,SAAP,EAAqB;AACrC,MAAMC,YAAY,qBACbF,IADa;AAEhBC,IAAAA,SAAS,EAAEA;AAFK,IAAlB;;AAIA3B,EAAAA,KAAK,CAAC6B,IAAN,CAAW,gCAAX,EAA6CD,YAA7C;AACD,CAND;;AAQA,IAAMf,KAAK,GAAG,SAARA,KAAQ,CAACa,IAAD,EAAOzB,UAAP,EAAmBC,aAAnB,EAAqC;AACjD4B,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA1B,EAAAA,KAAK,CACFgC,GADH,CACO,wCADP,EACiD;AAC7CC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAER,IAAI,CAACS,UAAL,CAAgBD;AAAzB;AADqC,GADjD,EAIGE,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB;AACA,QAAIA,QAAQ,CAACC,IAAb,EAAmB;AACjBpC,MAAAA,aAAa,CAACmC,QAAQ,CAACC,IAAT,CAAcX,SAAd,CAAwBY,OAAzB,CAAb;AACD;;AACDtC,IAAAA,UAAU,mBAAMyB,IAAI,CAACS,UAAX;AAAuBK,MAAAA,eAAe,EAAE;AAAxC,OAAV;AACD,GAVH,EAWGC,KAXH,CAWS,UAASC,KAAT,EAAgB,CACrB;AACD,GAbH;AAcD,CAjBD;;AAmBA,IAAM1B,MAAM,GAAG,SAATA,MAAS,CAACU,IAAD,EAAOzB,UAAP,EAAmBC,aAAnB,EAAqC;AAClDD,EAAAA,UAAU,mBAAMyB,IAAI,CAACS,UAAX;AAAuBK,IAAAA,eAAe,EAAE;AAAxC,KAAV;AACD,CAFD;;AAIA,IAAMG,MAAM,GAAG,SAATA,MAAS,OAAuD;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,MAA3CjB,SAA2C,QAA3CA,SAA2C;AAAA,MAAhC1B,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACpE,SACE;AAAK,IAAA,SAAS,EAAE0C,OAAO,CAACjC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAER,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEyC,OAAO,CAACpC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACmB,SAAS,CAACD,IAAV,CAAec,eAAhB,IACC,oBAAC,WAAD;AACE,IAAA,SAAS,EAAE,mBAAAd,IAAI;AAAA,aACbb,KAAK,CAACa,IAAD,EAAOzB,UAAP,EAAmBC,aAAnB,EAAkCyB,SAAlC,CADQ;AAAA,KADjB;AAIE,IAAA,SAAS,EAAEG,OAAO,CAACC,GAJrB;AAKE,IAAA,QAAQ,EAAEhC,SAAS,CAAC8C,gBALtB;AAME,IAAA,MAAM,EAAE,gBAAAC,WAAW;AAAA,aACjB,oBAAC,MAAD;AACE,QAAA,OAAO,EAAEA,WAAW,CAACC,OADvB;AAEE,QAAA,SAAS,EAAEH,OAAO,CAAC/B,KAFrB;AAGE,QAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADiB;AAAA,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAmBGc,SAAS,CAACD,IAAV,CAAec,eAAf,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEb,SAAS,CAACD,IAAV,CAAesB,QADtB;AAEE,IAAA,SAAS,EAAEJ,OAAO,CAACxB,MAFrB;AAGE,IAAA,SAAS,EAAExB,IAHb;AAIE,IAAA,EAAE,EAAC,UAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEgD,OAAO,CAACtB,QADrB;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGK,SAAS,CAACD,IAAV,CAAeuB,SAAf,GACGtB,SAAS,CAACD,IAAV,CAAeuB,SADlB,GAEGtB,SAAS,CAACD,IAAV,CAAewB,SAPrB,CAPF,EAiBI,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMzB,SAAS,CAACE,SAAS,CAACD,IAAX,EAAiBC,SAAjB,CAAf;AAAA,KADX;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,SAAS,EAAEiB,OAAO,CAAC1B,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,EA2BI,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aACPF,MAAM,CAACW,SAAS,CAACD,IAAX,EAAiBzB,UAAjB,EAA6BC,aAA7B,CADC;AAAA,KADX;AAIE,IAAA,OAAO,EAAC,IAJV;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,SAAS,EAAE0C,OAAO,CAAC5B,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,CApBJ,CADF,CAFF,EAiEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjEF,CADF,CADF;AAuED,CAxED;;AA0EA,SAASmC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLzB,IAAAA,SAAS,EAAEyB,KAAK,CAACC;AADZ,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLtD,IAAAA,UAAU,EAAE,oBAAAyB,IAAI;AAAA,aAAI6B,QAAQ,CAACtD,WAAU,CAACyB,IAAD,CAAX,CAAZ;AAAA,KADX;AAELxB,IAAAA,aAAa,EAAE,uBAAAkD,KAAK;AAAA,aAAIG,QAAQ,CAACrD,cAAa,CAACkD,KAAD,CAAd,CAAZ;AAAA;AAFf,GAAP;AAID;;AAED,eAAelE,OAAO,CACpBiE,eADoB,EAEpBG,kBAFoB,CAAP,CAGbnE,UAAU,CAACuB,MAAD,CAAV,CAAmBiC,MAAnB,CAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport { AppBar, Button, Toolbar, Avatar, Typography } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\n\nimport { Link } from 'react-router-dom'\nimport { GoogleLogin } from 'react-google-login'\nimport Routes from '..//Routes'\nimport ClientIds from '../config'\nimport axios from 'axios'\n\nimport { updateUser, updateColumns } from '../actions/simpleAction'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    useNextVariants: true\n  },\n  toolbar: {\n    backgroundColor: 'white'\n  }\n})\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  login: {\n    right: 10,\n    position: 'absolute'\n  },\n  logout: {\n    right: 5,\n    top: 13,\n    position: 'absolute'\n  },\n  toolbar: {\n    backgroundColor: '#008080'\n  },\n  save: {\n    right: 90,\n    top: 13,\n    position: 'absolute'\n  },\n  signup: {\n    right: 80,\n    position: 'absolute'\n  },\n  avatar: {\n    left: 35,\n    top: 10,\n    position: 'absolute'\n  },\n  userName: {\n    left: 100,\n    top: 16,\n    position: 'absolute',\n    text: theme.palette.secondary\n  }\n})\n\nconst saveBooks = (user, userState) => {\n  const newUserState = {\n    ...user,\n    userState: userState\n  }\n  axios.post('http://localhost:3001/api/save', newUserState)\n}\n\nconst login = (user, updateUser, updateColumns) => {\n  console.log(user)\n\n  axios\n    .get('http://localhost:3001/api/retrieveSave', {\n      params: { email: user.profileObj.email }\n    })\n    .then(function(response) {\n      //console.log(response.data)\n      if (response.data) {\n        updateColumns(response.data.userState.columns)\n      }\n      updateUser({ ...user.profileObj, isAuthenticated: true })\n    })\n    .catch(function(error) {\n      //console.log(error)\n    })\n}\n\nconst logout = (user, updateUser, updateColumns) => {\n  updateUser({ ...user.profileObj, isAuthenticated: false })\n}\n\nconst Navbar = ({ classes, userState, updateUser, updateColumns }) => {\n  return (\n    <div className={classes.root}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar position=\"static\">\n          <Toolbar className={classes.toolbar}>\n            {!userState.user.isAuthenticated && (\n              <GoogleLogin\n                onSuccess={user =>\n                  login(user, updateUser, updateColumns, userState)\n                }\n                onFailure={console.log}\n                clientId={ClientIds.GOOGLE_CLIENT_ID}\n                render={renderProps => (\n                  <Button\n                    onClick={renderProps.onClick}\n                    className={classes.login}\n                    color=\"inherit\"\n                  >\n                    Login with Google\n                  </Button>\n                )}\n              />\n            )}\n            {userState.user.isAuthenticated && (\n              <div>\n                <Avatar\n                  src={userState.user.imageUrl}\n                  className={classes.avatar}\n                  component={Link}\n                  to=\"/profile\"\n                />\n                <Typography\n                  className={classes.userName}\n                  variant=\"h6\"\n                  color=\"inherit\"\n                >\n                  {userState.user.firstName\n                    ? userState.user.firstName\n                    : userState.user.givenName}\n                </Typography>\n                {\n                  <Button\n                    onClick={() => saveBooks(userState.user, userState)}\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    className={classes.save}\n                  >\n                    Save\n                  </Button>\n                }\n                {\n                  <Button\n                    onClick={() =>\n                      logout(userState.user, updateUser, updateColumns)\n                    }\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    className={classes.logout}\n                  >\n                    Logout\n                  </Button>\n                }\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n        <Routes />\n      </MuiThemeProvider>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userState: state.simpleReducer\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateUser: user => dispatch(updateUser(user)),\n    updateColumns: state => dispatch(updateColumns(state))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Navbar))\n"]},"metadata":{},"sourceType":"module"}